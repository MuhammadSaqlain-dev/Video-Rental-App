{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/customers.jsx","services/movieService.js","components/common/pagination.jsx","utils/paginate.js","components/common/listGroup.jsx","services/genreService.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/search.jsx","components/movies.jsx","components/rentals.jsx","components/navBar.jsx","components/notFound.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","services/userService.js","components/registerForm.jsx","components/moviesForm.jsx","components/loginForm.jsx","components/logout.jsx","components/common/proctedRoutes.jsx","App.js","registerServiceWorker.js","index.js"],"names":["init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","TokenKey","email","password","a","http","data","localStorage","setItem","getJwt","getItem","loginUser","loginWithJwt","getCurrentUser","jwtDecode","ex","logoutUser","removeItem","Customers","className","movieUrl","id","getMovie","movieId","saveMovie","movie","_id","body","deleteMovie","Pagination","totalItems","pageSize","currentPage","onPageChange","totalPages","Math","ceil","paged","_","range","map","onClick","href","paginate","startIndex","slice","take","value","ListGroup","totalGenres","selectedGenre","valueProperty","textProperty","onGenreSelect","genre","style","cursor","defaultProps","getGenres","Like","liked","classes","TableHeader","raiseSorting","path","columnSorting","props","order","onSort","renderSortIcon","column","this","label","key","Component","TableBody","renderCell","item","content","uniqueKey","columns","Table","MoviesTable","movies","Link","to","title","onLike","showDeleteBtn","onDelete","user","auth","isAdmin","push","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","state","searchQuery","getPagedData","allMovies","filtered","filter","m","toLowerCase","startsWith","orderBy","totalCount","length","handleDelete","originalMovies","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","handleSearch","handleSorting","genreData","movieData","Rentals","Navbar","NavLink","Fragment","NotFound","Input","errors","rest","htmlFor","Select","options","opt","Form","validate","joi","schema","abortEarly","details","message","handleSubmit","preventDefault","doSubmit","validateChange","handleChange","input","errorsMessage","renderInput","renderSelect","renderButton","disabled","registerUser","username","RegisterForm","string","required","min","max","window","location","onSubmit","MoviesForm","genreId","numberInStock","dailyRentalRate","number","integer","history","match","params","mapToViewModel","replace","populateGenres","populateMovies","LoginForm","from","pathname","createRef","React","Logout","ProtectedRoute","component","render","Route","Redirect","App","Switch","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","BrowserRouter","document","getElementById","URL","origin","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"iSAUe,OACbA,KAPF,aAQEC,IANF,SAAaC,GACXC,QAAQD,MAAMA,K,QCHhBE,IAAMC,SAASC,QAAUC,4BAEzBH,IAAMI,aAAaC,SAASC,IAAI,MAAM,SAACR,GAWrC,OATEA,EAAMO,UACNP,EAAMO,SAASE,QAAU,KACzBT,EAAMO,SAASE,OAAS,MAGxBC,EAAOX,IAAIC,GACXW,QAAMX,MAAM,mCAGPY,QAAQC,OAAOb,MAOT,OACbc,IAAKZ,IAAMY,IACXC,KAAMb,IAAMa,KACZC,IAAKd,IAAMc,IACXC,OAAQf,IAAMe,OACdC,OATF,SAAgBC,GACdjB,IAAMC,SAASiB,QAAQC,OAAO,gBAAkBF,I,iBClB5CG,EAAc,QACdC,EAAW,Y,4CAIjB,WAAyBC,EAAOC,GAAhC,iBAAAC,EAAA,sEAC8BC,EAAKZ,KAAKO,EAAa,CAAEE,QAAOC,aAD9D,gBACgBN,EADhB,EACUS,KACRC,aAAaC,QAAQP,EAAUJ,GAFjC,4C,sBAsBO,SAASY,IACd,OAAOF,aAAaG,QAAQ,aAzB9BL,EAAKT,OAAOa,KA4BG,OACbE,U,8CACAC,aAvBF,SAAsBf,GACpBU,aAAaC,QAAQP,EAAUJ,IAuB/BgB,eApBK,WACL,IACE,IAAMhB,EAAMU,aAAaG,QAAQT,GACjC,OAAOa,IAAUjB,GACjB,MAAOkB,GACP,OAAO,OAgBTC,WAZF,WACET,aAAaU,WAAWhB,IAYxBQ,U,OCjCaS,EAJG,WAChB,OAAO,oBAAIC,UAAU,YAAd,wB,QCDHnB,EAAc,UAEpB,SAASoB,EAASC,GAChB,MAAM,GAAN,OAAUrB,EAAV,YAAyBqB,GAOpB,SAASC,EAASC,GACvB,OAAOlB,EAAKb,IAAI4B,EAASG,IAGpB,SAASC,EAAUC,GACxB,GAAIA,EAAMC,IAAK,CACb,IAAMC,EAAI,eAAQF,GAElB,cADOE,EAAKD,IACLrB,EAAKX,IAAI0B,EAASK,EAAMC,KAAMC,GAGvC,OAAOtB,EAAKZ,KAAKO,EAAayB,GAGzB,SAASG,EAAYL,GAC1B,OAAOlB,EAAKV,OAAOyB,EAASG,I,qBCDfM,EAvBI,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,WAAYC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACjDC,EAAaC,KAAKC,KAAKN,EAAaC,GAC1C,GAAIG,GAAc,EAAG,OAAO,KAC5B,IAAMG,EAAQC,IAAEC,MAAM,EAAGL,EAAa,GACtC,OACE,8BACE,oBAAIf,UAAU,aAAd,SACGkB,EAAMG,KAAI,SAACH,GAAD,OACT,oBACEI,QAAS,kBAAMR,EAAaI,IAE5BlB,UAAWkB,IAAUL,EAAc,mBAAqB,YAH1D,SAKE,mBAAGU,KAAK,KAAKvB,UAAU,YAAvB,SACGkB,KAJEA,WCXV,SAASM,EAASb,EAAYE,EAAaD,GAChD,IAAMa,GAAcZ,EAAc,GAAKD,EACvC,OAAOO,IAAER,GAAYe,MAAMD,GAAYE,KAAKf,GAAUgB,QCFxD,IAAMC,EAAY,SAAC,GAMZ,IALLC,EAKI,EALJA,YACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,aACAC,EACI,EADJA,cAEA,OACE,oBAAIlC,UAAU,aAAd,SACG8B,EAAYT,KAAI,SAACc,GAAD,OACf,oBACEC,MAAO,CAAEC,OAAQ,WACjBf,QAAS,kBAAMY,EAAcC,IAE7BnC,UACEmC,IAAUJ,EACN,yBACA,kBAPR,SAUGI,EAAMF,IAPFE,EAAMH,UAcrBH,EAAUS,aAAe,CACvBN,cAAe,MACfC,aAAc,QAGDJ,QC9BR,SAASU,IACd,OAAOrD,EAAKb,IAHG,WCAjB,IAaemE,EAbF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOnB,EAAc,EAAdA,QACjBoB,EAAU,cAEd,OADKD,IAAOC,GAAW,MAErB,mBACEpB,QAASA,EACTc,MAAO,CAAEC,OAAQ,WACjBrC,UAAW0C,EACX,cAAY,UCsCHC,E,4MAxCbC,aAAe,SAACC,GACd,IAAMC,EAAa,eAAQ,EAAKC,MAAMD,eAClCA,EAAcD,OAASA,EACzBC,EAAcE,MAAgC,QAAxBF,EAAcE,MAAkB,OAAS,OAE/DF,EAAcD,KAAOA,EACrBC,EAAcE,MAAQ,OAExB,EAAKD,MAAME,OAAOH,I,EAGpBI,eAAiB,SAACC,GAChB,IAAQL,EAAkB,EAAKC,MAAvBD,cAER,OAAIK,EAAON,OAASC,EAAcD,KAAa,KACnB,QAAxBC,EAAcE,MAAwB,mBAAGhD,UAAU,mBAChD,mBAAGA,UAAU,qB,4CAGtB,WAAU,IAAD,OACCmD,EAAWC,KAAKL,MAAhBI,OACR,OACE,gCACE,6BACGA,EAAO9B,KAAI,SAAC8B,GAAD,OACV,qBACEf,MAAO,CAAEC,OAAQ,WAEjBf,QAAS,kBAAM,EAAKsB,aAAaO,EAAON,OAH1C,UAKGM,EAAOE,MACP,EAAKH,eAAeC,KAJhBA,EAAON,MAAQM,EAAOG,gB,GA5BfC,aCyBXC,E,4MA5BbC,WAAa,SAACC,EAAMP,GAClB,OAAIA,EAAOQ,QAAgBR,EAAOQ,QAAQD,GAEnCvC,IAAE9C,IAAIqF,EAAMP,EAAON,O,EAG5Be,UAAY,SAACF,EAAMP,GACjB,OAAOO,EAAKnD,KAAO4C,EAAON,MAAQM,EAAOG,M,4CAG3C,WAAU,IAAD,OACP,EAA0BF,KAAKL,MAAvB5D,EAAR,EAAQA,KAAM0E,EAAd,EAAcA,QACd,OACE,gCACG1E,EAAKkC,KAAI,SAACqC,GAAD,OACR,6BACGG,EAAQxC,KAAI,SAAC8B,GAAD,OACX,6BACG,EAAKM,WAAWC,EAAMP,IADhB,EAAKS,UAAUF,EAAMP,QAFzBO,EAAKnD,c,GAhBAgD,aCoBTO,EAdD,SAAC,GAA6C,IAA3CX,EAA0C,EAA1CA,OAAQF,EAAkC,EAAlCA,OAAQH,EAA0B,EAA1BA,cAAe3D,EAAW,EAAXA,KAC9C,OACE,wBAAOa,UAAU,QAAjB,UACE,cAAC,EAAD,CACEA,UAAU,QACVmD,OAAQA,EACRF,OAAQA,EACRH,cAAeA,IAEjB,cAAC,EAAD,CAAW3D,KAAMA,EAAM0E,QAASV,Q,QC0CvBY,E,kDAlCb,aAAe,IAAD,uBACZ,gBApBFZ,OAAS,CACP,CACEE,MAAO,QACPR,KAAM,QACNc,QAAS,SAACK,GAAD,OACP,cAACC,EAAA,EAAD,CAAMC,GAAE,kBAAaF,EAAOzD,KAA5B,SAAoCyD,EAAOG,UAG/C,CAAEd,MAAO,QAASR,KAAM,cACxB,CAAEQ,MAAO,QAASR,KAAM,iBACxB,CAAEQ,MAAO,OAAQR,KAAM,mBACvB,CACES,IAAK,OACLK,QAAS,SAACrD,GAAD,OACP,cAAC,EAAD,CAAMmC,MAAOnC,EAAMmC,MAAOnB,QAAS,kBAAM,EAAKyB,MAAMqB,OAAO9D,SAKnD,EAQd+D,cAAgB,CACdf,IAAK,SACLK,QAAS,SAACrD,GAAD,OACP,wBACEgB,QAAS,kBAAM,EAAKyB,MAAMuB,SAAShE,IACnCN,UAAU,wBAFZ,sBATF,IAAMuE,EAAOC,EAAK9E,iBAFN,OAGR6E,GAAQA,EAAKE,SACf,EAAKtB,OAAOuB,KAAK,EAAKL,eAJZ,E,0CAoBd,WACE,MAA0CjB,KAAKL,MAAvCiB,EAAR,EAAQA,OAAQf,EAAhB,EAAgBA,OAAQH,EAAxB,EAAwBA,cAExB,OACE,cAAC,EAAD,CACEK,OAAQC,KAAKD,OACbF,OAAQA,EACRH,cAAeA,EACf3D,KAAM6E,Q,GAhDYT,aCSXoB,EAbG,SAAC,GAAyB,IAAvB/C,EAAsB,EAAtBA,MAAOgD,EAAe,EAAfA,SAC1B,OACE,uBACEC,KAAK,OACLC,KAAK,cACL9E,UAAU,oBACV+E,YAAY,YACZnD,MAAOA,EACPgD,SAAU,SAACI,GAAD,OAAOJ,EAASI,EAAEC,cAAcrD,WC4IjCsD,E,4MAzIbC,MAAQ,CACNnB,OAAQ,GACR7B,MAAO,GACPvB,SAAU,EACVC,YAAa,EACbiC,cAAe,CAAED,KAAM,QAASG,MAAO,OACvCoC,YAAa,I,EAGfC,aAAe,WACb,MAOI,EAAKF,MANCG,EADV,EACEtB,OACApD,EAFF,EAEEA,SACAmB,EAHF,EAGEA,cACAlB,EAJF,EAIEA,YACAiC,EALF,EAKEA,cACAsC,EANF,EAMEA,YAEEG,EAAWD,EAgBf,OAfIF,EACFG,EAAWD,EAAUE,QAAO,SAACC,GAAD,OAC1BA,EAAEtB,MAAMuB,cAAcC,WAAWP,EAAYM,kBAExC3D,GAAiBA,EAAcxB,MACtCgF,EAAWD,EAAUE,QAAO,SAACC,GAAD,OAAOA,EAAEtD,MAAM5B,MAAQwB,EAAcxB,QAU5D,CAAEyD,OAFMxC,EANCL,IAAEyE,QAChBL,EACA,CAACzC,EAAcD,MACf,CAACC,EAAcE,QAGgBnC,EAAaD,GAE7BiF,WAAYN,EAASO,S,EAaxCC,a,uCAAe,WAAOzF,GAAP,iBAAArB,EAAA,6DACP+G,EAAiB,EAAKb,MAAMnB,OAE5BA,EAASgC,EAAeR,QAAO,SAACC,GAAD,OAAOA,EAAElF,MAAQD,EAAMC,OAC5D,EAAK0F,SAAS,CAAEjC,WAJH,kBAOLvD,EAAYH,EAAMC,KAPb,uDASP,KAAGzC,UAAmC,MAAvB,KAAGA,SAASE,QAC7BE,gBAAM,wCAER,EAAK+H,SAAS,CAAEjC,OAAQgC,IAZb,yD,wDAgBfE,WAAa,SAAC5F,GACZ,IAAM0D,EAAM,YAAO,EAAKmB,MAAMnB,QACxBmC,EAAQnC,EAAOoC,QAAQ9F,GAC7B0D,EAAOmC,GAAP,eAAqBnC,EAAOmC,IAC5BnC,EAAOmC,GAAO1D,OAASuB,EAAOmC,GAAO1D,MACrC,EAAKwD,SAAS,CAAEjC,Y,EAGlBqC,iBAAmB,SAACnF,GAClB,EAAK+E,SAAS,CAAEpF,YAAaK,K,EAG/BoF,kBAAoB,SAACnE,GACnB,EAAK8D,SAAS,CAAElE,cAAeI,EAAOiD,YAAa,GAAIvE,YAAa,K,EAGtE0F,aAAe,SAACnB,GACd,EAAKa,SAAS,CAAEb,cAAarD,cAAe,KAAMlB,YAAa,K,EAGjE2F,cAAgB,SAAC1D,GACf,EAAKmD,SAAS,CAAEnD,mB,8FA/ClB,oCAAA7D,EAAA,sEACoCsD,IADpC,uBACgBkE,EADhB,EACUtH,KAEFgD,EAHR,CAGiB,CAAE2C,KAAM,aAAcvE,IAAK,KAH5C,mBAGqDkG,IAHrD,SXzCOvH,EAAKb,IAAIQ,GWyChB,gBAKgB6H,EALhB,EAKUvH,KAERiE,KAAK6C,SAAS,CAAEjC,OAAQ0C,EAAWvE,UAPrC,iD,0EAkDA,WAC4BiB,KAAK+B,MAAMnB,OAA7B8B,OAAR,IACQvB,EAASnB,KAAKL,MAAdwB,KAER,EAA+BnB,KAAKiC,eAA5BrB,EAAR,EAAQA,OAAQ6B,EAAhB,EAAgBA,WAEhB,OACE,qBAAK7F,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACE8B,YAAasB,KAAK+B,MAAMhD,MACxBJ,cAAeqB,KAAK+B,MAAMpD,cAC1BG,cAAekB,KAAKkD,sBAGxB,sBAAKtG,UAAU,QAAf,UACGuE,GACC,cAACN,EAAA,EAAD,CAAMC,GAAG,cAAclE,UAAU,uBAAjC,uBAIF,yCAAY6F,EAAZ,8BAEA,cAAC,EAAD,CACEjE,MAAOwB,KAAK+B,MAAMC,YAClBR,SAAUxB,KAAKmD,eAGjB,cAAC,EAAD,CACEtD,OAAQG,KAAKoD,cACbxC,OAAQA,EACRI,OAAQhB,KAAK8C,WACb5B,SAAUlB,KAAK2C,aACfjD,cAAeM,KAAK+B,MAAMrC,gBAG5B,cAAC,EAAD,CACEnC,WAAYkF,EACZjF,SAAUwC,KAAK+B,MAAMvE,SACrBC,YAAauC,KAAK+B,MAAMtE,YACxBC,aAAcsC,KAAKiD,+B,GAjIZ9C,aCNNoD,EAJC,WACd,OAAO,oBAAI3G,UAAU,YAAd,sB,SCwDM4G,GAxDA,SAAC,GAAc,IAAZrC,EAAW,EAAXA,KAChB,OACE,qBAAKvE,UAAU,qDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAACiE,EAAA,EAAD,CAAMjE,UAAU,eAAekE,GAAG,IAAlC,mBAGA,wBACElE,UAAU,iBACV6E,KAAK,SACL,iBAAe,WACf,iBAAe,sBACf,gBAAc,qBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAM7E,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BE,GAAG,qBAA7C,SACE,sBAAKF,UAAU,aAAf,UACE,cAAC6G,GAAA,EAAD,CAAS7G,UAAU,WAAW,eAAa,OAAOkE,GAAG,UAArD,oBAGA,cAAC2C,GAAA,EAAD,CAAS7G,UAAU,WAAWkE,GAAG,aAAjC,uBAGA,cAAC2C,GAAA,EAAD,CAAS7G,UAAU,WAAWkE,GAAG,WAAjC,sBAGEK,GACA,eAAC,IAAMuC,SAAP,WACE,cAACD,GAAA,EAAD,CAAS7G,UAAU,WAAWkE,GAAG,SAAjC,mBAGA,cAAC2C,GAAA,EAAD,CAAS7G,UAAU,WAAWkE,GAAG,YAAjC,yBAKHK,GACC,eAAC,IAAMuC,SAAP,WACE,cAACD,GAAA,EAAD,CAAS7G,UAAU,WAAWkE,GAAG,WAAjC,SACGK,EAAKO,OAER,cAAC+B,GAAA,EAAD,CAAS7G,UAAU,WAAWkE,GAAG,UAAjC,kCCzCD6C,GAJE,WACf,OAAO,oBAAI/G,UAAU,YAAd,wB,2ECWMgH,GAZD,SAAC,GAAsC,IAApClC,EAAmC,EAAnCA,KAAMzB,EAA6B,EAA7BA,MAAO4D,EAAsB,EAAtBA,OAAWC,EAAW,mBAClD,OACE,sBAAKlH,UAAU,OAAf,UACE,uBAAOmH,QAASrC,EAAM9E,UAAU,aAAhC,SACGqD,IAEH,+CAAOyB,KAAMA,EAAM5E,GAAI4E,GAAUoC,GAAjC,IAAuClH,UAAU,kBAChDiH,GAAU,qBAAKjH,UAAU,qBAAf,SAAqCiH,Q,uCCoBvCG,GAxBA,SAAC,GAA+C,IAA7CtC,EAA4C,EAA5CA,KAAMzB,EAAsC,EAAtCA,MAAOgE,EAA+B,EAA/BA,QAASJ,EAAsB,EAAtBA,OAAWC,EAAW,mBAC5D,OACE,sBAAKlH,UAAU,OAAf,UACE,uBAAOmH,QAASrC,EAAM9E,UAAU,aAAhC,SACGqD,IAEH,iDACEyB,KAAMA,EACN5E,GAAI4E,GACAoC,GAHN,IAIElH,UAAU,2BAJZ,UAME,wBAAQ4B,MAAM,GAAd,8BACCyF,EAAQhG,KAAI,SAACiG,GAAD,OACX,wBAAsB1F,MAAO0F,EAAI/G,IAAjC,SACG+G,EAAIxC,MADMwC,EAAI/G,YAKpB0G,GAAU,qBAAKjH,UAAU,qBAAf,SAAqCiH,QCqEvCM,G,4MAvFbpC,MAAQ,CACNhG,KAAM,GACN8H,OAAQ,I,EAGVO,SAAW,WACT,IACQjK,EAAUkK,KAAID,SAAS,EAAKrC,MAAMhG,KAAM,EAAKuI,OADrC,CAAEC,YAAY,IACtBpK,MACR,IAAKA,EAAO,OAAO,KAEnB,IALe,EAKT0J,EAAS,GALA,eAME1J,EAAMqK,SANR,IAMf,gCAASlE,EAAT,QAAgCuD,EAAOvD,EAAKb,KAAK,IAAMa,EAAKmE,SAN7C,8BAOf,OAAOZ,G,EAGTa,aAAe,SAAC9C,GACdA,EAAE+C,iBAEF,IAAMd,EAAS,EAAKO,WACpB,EAAKvB,SAAS,CAAEgB,OAAQA,GAAU,KAClCzJ,QAAQF,IAAI2J,GACRA,GAGF,EAAKe,Y,EAITC,eAAiB,YAAsB,IAAnBnD,EAAkB,EAAlBA,KAAMlD,EAAY,EAAZA,MAClBmB,EAAK,gBAAM+B,EAAOlD,GAClB8F,EAAM,gBAAM5C,EAAO,EAAK4C,OAAO5C,IAC7BvH,EAAUkK,KAAID,SAASzE,EAAO2E,GAA9BnK,MAER,OAAOA,EAAQA,EAAMqK,QAAQ,GAAGC,QAAU,M,EAG5CK,aAAe,YAA+B,IAAbC,EAAY,EAA3BlD,cACVgC,EAAM,eAAQ,EAAK9B,MAAM8B,QACzBmB,EAAgB,EAAKH,eAAeE,GACtCC,EAAenB,EAAOkB,EAAMrD,MAAQsD,SAC5BnB,EAAOkB,EAAMrD,MAEzB,IAAM3F,EAAI,eAAQ,EAAKgG,MAAMhG,MAC7BA,EAAKgJ,EAAMrD,MAAQqD,EAAMvG,MAEzB,EAAKqE,SAAS,CAAE9G,OAAM8H,Y,EAGxBoB,YAAc,SAAChF,EAAOyB,GAAyB,IAAnBD,EAAkB,uDAAX,OACjC,EAAyB,EAAKM,MAAtBhG,EAAR,EAAQA,KAAM8H,EAAd,EAAcA,OAEd,OACE,cAAC,GAAD,CACEpC,KAAMA,EACNxB,MAAOA,EACPyB,KAAMA,EACNlD,MAAOzC,EAAK2F,GACZF,SAAU,EAAKsD,aACfjB,OAAQA,EAAOnC,M,EAKrBwD,aAAe,SAACjF,EAAOyB,EAAMuC,GAC3B,MAAyB,EAAKlC,MAAtBhG,EAAR,EAAQA,KAAM8H,EAAd,EAAcA,OAEd,OACE,cAAC,GAAD,CACE5D,MAAOA,EACPyB,KAAMA,EACNuC,QAASA,EACTJ,OAAQA,EAAOnC,GACfF,SAAU,EAAKsD,aACftG,MAAOzC,EAAK2F,M,EAKlByD,aAAe,SAAClF,GACd,OACE,wBAAQmF,SAAU,EAAKhB,WAAYxH,UAAU,kBAA7C,SACGqD,K,YAlFUE,aCDZ,SAASkF,GAAalE,GAC3B,OAAOrF,EAAKZ,KAHM,SAGY,CAC5BS,MAAOwF,EAAKmE,SACZ1J,SAAUuF,EAAKvF,SACf8F,KAAMP,EAAKO,O,ICwCA6D,G,4MAzCbxD,MAAQ,CACNhG,KAAM,CAAEuJ,SAAU,GAAI1J,SAAU,GAAI8F,KAAM,IAC1CmC,OAAQ,I,EAGVS,OAAS,CACPgB,SAAUjB,KAAImB,SAASC,WAAWxF,MAAM,YAAYtE,QACpDC,SAAUyI,KAAImB,SAASC,WAAWxF,MAAM,YAAYyF,IAAI,GAAGC,IAAI,IAC/DjE,KAAM2C,KAAImB,SAASC,WAAWxF,MAAM,S,EAGtC2E,S,sBAAW,8BAAA/I,EAAA,+EAGgBwJ,GAAa,EAAKtD,MAAMhG,MAHxC,OAGDrB,EAHC,OAIP0G,EAAK/E,aAAa3B,EAASa,QAAQ,iBACnCqK,OAAOC,SAAW,IALX,gDAOH,KAAGnL,UAAmC,MAAvB,KAAGA,SAASE,UACvBiJ,EADuC,eACzB,EAAK9B,MAAM8B,SACxByB,SAAW,KAAG5K,SAASqB,KAC9B,EAAK8G,SAAS,CAAEgB,YAVX,yD,4CAeX,WACE,OACE,sBAAKjH,UAAU,YAAf,UACE,+CACA,uBAAMkJ,SAAU9F,KAAK0E,aAArB,UACG1E,KAAKiF,YAAY,WAAY,YAC7BjF,KAAKiF,YAAY,WAAY,WAAY,YACzCjF,KAAKiF,YAAY,OAAQ,QACzBjF,KAAKmF,aAAa,sB,GAnCFhB,ICkFZ4B,G,4MA/EbhE,MAAQ,CACNhG,KAAM,CAAEgF,MAAO,GAAIiF,QAAS,GAAIC,cAAe,GAAIC,gBAAiB,IACpEnH,MAAO,GACP8E,OAAQ,I,EAoCVS,OAAS,CACPnH,IAAKkH,KAAImB,SACTzE,MAAOsD,KAAImB,SAASC,WAAWxF,MAAM,SACrC+F,QAAS3B,KAAImB,SAASC,WAAWxF,MAAM,SACvCgG,cAAe5B,KACZ8B,SACAC,UACAV,IAAI,GACJC,IAAI,KACJF,WACAxF,MAAM,mBACTiG,gBAAiB7B,KAAI8B,SAAST,IAAI,GAAGC,IAAI,IAAIF,WAAWxF,MAAM,S,EAGhE2E,S,sBAAW,sBAAA/I,EAAA,sEACHoB,EAAU,EAAK8E,MAAMhG,MADlB,OAGT,EAAK4D,MAAM0G,QAAQ/E,KAAK,WAExBlH,QAAQF,IAAI,aALH,2C,2FA/CX,8BAAA2B,EAAA,sEACgCsD,IADhC,gBACgBJ,EADhB,EACUhD,KACRiE,KAAK6C,SAAS,CAAE9D,UAFlB,gD,yHAKA,gCAAAlD,EAAA,kEAGoB,SADVmB,EAAUgD,KAAKL,MAAM2G,MAAMC,OAAOzJ,IAF5C,iEAKkCC,EAASC,GAL3C,gBAKkBE,EALlB,EAKYnB,KACRiE,KAAK6C,SAAS,CAAE9G,KAAMiE,KAAKwG,eAAetJ,KAN9C,kDAQQ,KAAGxC,UAAmC,MAAvB,KAAGA,SAASE,QAC7BoF,KAAKL,MAAM0G,QAAQI,QAAQ,cATjC,0D,4HAaA,sBAAA5K,EAAA,sEACQmE,KAAK0G,iBADb,uBAEQ1G,KAAK2G,iBAFb,gD,kFAKA,SAAezJ,GACb,MAAO,CACLC,IAAKD,EAAMC,IACX4D,MAAO7D,EAAM6D,MACbiF,QAAS9I,EAAM6B,MAAM5B,IACrB8I,cAAe/I,EAAM+I,cACrBC,gBAAiBhJ,EAAMgJ,mB,oBA0B3B,WAGE,OACE,sBAAKtJ,UAAU,YAAf,UACE,4CACA,uBAAMkJ,SAAU9F,KAAK0E,aAArB,UACG1E,KAAKiF,YAAY,QAAS,SAC1BjF,KAAKkF,aAAa,QAAS,UAAWlF,KAAK+B,MAAMhD,OACjDiB,KAAKiF,YAAY,kBAAmB,gBAAiB,UACrDjF,KAAKiF,YAAY,OAAQ,mBACzBjF,KAAKmF,aAAa,wB,GAzEJhB,IC0CVyC,G,4MA5Cb7E,MAAQ,CACNhG,KAAM,CAAEuJ,SAAU,GAAI1J,SAAU,IAChCiI,OAAQ,I,EAGVS,OAAS,CACPgB,SAAUjB,KAAImB,SAASC,WAAWxF,MAAM,YACxCrE,SAAUyI,KAAImB,SAASC,WAAWxF,MAAM,a,EAG1C2E,S,sBAAW,gCAAA/I,EAAA,sEAGCE,EAAS,EAAKgG,MAAdhG,KAHD,SAIDqF,EAAKhF,UAAUL,EAAKuJ,SAAUvJ,EAAKH,UAJlC,OAMCmG,EAAU,EAAKpC,MAAMkG,SAArB9D,MAER6D,OAAOC,SAAW9D,EAAQA,EAAM8E,KAAKC,SAAW,IARzC,gDAUH,KAAGpM,UAAmC,MAAvB,KAAGA,SAASE,UACvBiJ,EADuC,eACzB,EAAK9B,MAAM8B,SACxByB,SAAW,KAAG5K,SAASqB,KAC9B,EAAK8G,SAAS,CAAEgB,YAbX,yD,EAkBXkD,UAAYC,IAAMD,Y,4CAElB,WACE,OACE,sBAAKnK,UAAU,YAAf,UACE,oBAAIA,UAAU,OAAd,yBACA,uBAAMkJ,SAAU9F,KAAK0E,aAArB,UACG1E,KAAKiF,YAAY,WAAY,YAC7BjF,KAAKiF,YAAY,WAAY,WAAY,YACzCjF,KAAKmF,aAAa,mB,GAtCLhB,ICQT8C,G,uKATb,WACE7F,EAAK3E,aACLmJ,OAAOC,SAAW,M,oBAEpB,WACE,OAAO,S,GANU1F,a,0BCyBN+G,GAxBQ,SAAC,GAA+C,IAAlC/G,EAAiC,EAA5CgH,UAAsBC,EAAsB,EAAtBA,OAAWtD,EAAW,mBACpE,OACE,cAACuD,EAAA,EAAD,2BACMvD,GADN,IAEEsD,OAAQ,SAACzH,GAGP,OAFAvF,QAAQF,IAAIyF,GAEPyB,EAAK9E,iBAUD6D,EAAY,cAACA,EAAD,eAAeR,IAAYyH,EAAOzH,GARnD,cAAC2H,EAAA,EAAD,CACExG,GAAI,CACFgG,SAAU,SACV/E,MAAO,CAAE8E,KAAMlH,EAAMkG,kBCmCtB0B,I,wNAjCbxF,MAAQ,G,uDAER,WACE,IAAMZ,EAAOC,EAAK9E,iBAClB0D,KAAK6C,SAAS,CAAE1B,W,oBAGlB,WACE,IAAQA,EAASnB,KAAK+B,MAAdZ,KACR,OACE,eAAC,IAAMuC,SAAP,WACE,cAAC,iBAAD,IACA,cAAC,GAAD,CAAQvC,KAAMA,IACd,eAACqG,EAAA,EAAD,WACE,cAAC,GAAD,CAAgB/H,KAAK,cAAc0H,UAAWpB,KAC9C,cAACsB,EAAA,EAAD,CACE5H,KAAK,UACL2H,OAAQ,SAACzH,GAAD,OAAW,cAAC,EAAD,2BAAYA,GAAZ,IAAmBwB,KAAMA,QAE9C,cAACkG,EAAA,EAAD,CAAO5H,KAAK,SAAS0H,UAAWP,KAChC,cAACS,EAAA,EAAD,CAAO5H,KAAK,UAAU0H,UAAWF,KACjC,cAACI,EAAA,EAAD,CAAO5H,KAAK,aAAa0H,UAAWxK,IACpC,cAAC0K,EAAA,EAAD,CAAO5H,KAAK,WAAW0H,UAAW5D,IAClC,cAAC8D,EAAA,EAAD,CAAO5H,KAAK,YAAY0H,UAAW5B,KACnC,cAAC8B,EAAA,EAAD,CAAO5H,KAAK,aAAa0H,UAAWxD,KACpC,cAAC2D,EAAA,EAAD,CAAUT,KAAK,IAAIY,OAAK,EAAC3G,GAAG,YAC5B,cAACwG,EAAA,EAAD,CAAUxG,GAAG,yB,GA3BLX,cCPZuH,GAAcC,QACW,cAA7B/B,OAAOC,SAAS+B,UAEe,UAA7BhC,OAAOC,SAAS+B,UAEhBhC,OAAOC,SAAS+B,SAAStB,MACvB,2DAsCN,SAASuB,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtG,QACfgG,UAAUC,cAAcQ,WAK1BpO,QAAQF,IAAI,6CAKZE,QAAQF,IAAI,4CAMrBuO,OAAM,SAAAtO,GACLC,QAAQD,MAAM,4CAA6CA,M,yBCtEjEC,QAAQF,IAAI,sBAAuBM,6BAEnCkO,IAAStB,OACP,cAACuB,GAAA,EAAD,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SDKX,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAItO,GAAwBoL,OAAOC,UAC3CkD,SAAWnD,OAAOC,SAASkD,OAIvC,OAGFnD,OAAOoD,iBAAiB,QAAQ,WAC9B,IAAMlB,EAAK,UAAMtN,GAAN,sBAEPkN,KAiDV,SAAiCI,GAE/BmB,MAAMnB,GACHI,MAAK,SAAAxN,GAGkB,MAApBA,EAASE,SACuD,IAAhEF,EAASa,QAAQN,IAAI,gBAAgB+H,QAAQ,cAG7C+E,UAAUC,cAAckB,MAAMhB,MAAK,SAAAC,GACjCA,EAAagB,aAAajB,MAAK,WAC7BtC,OAAOC,SAASuD,eAKpBvB,GAAgBC,MAGnBW,OAAM,WACLrO,QAAQF,IACN,oEArEAmP,CAAwBvB,GAIxBC,UAAUC,cAAckB,MAAMhB,MAAK,WACjC9N,QAAQF,IACN,gHAMJ2N,GAAgBC,OC/BxBwB,K","file":"static/js/main.4ba8c5e2.chunk.js","sourcesContent":["// For simplicity, I changed the implementation of this module\n// and removed Raven. We can always add that in the future\n// and this module is the only module we need to modify.\n\nfunction init() {}\n\nfunction log(error) {\n  console.error(error);\n}\n\nexport default {\n  init,\n  log\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n};\n","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst apiEndpoint = \"/auth\";\r\nconst TokenKey = \"Web Token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nasync function loginUser(email, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n  localStorage.setItem(TokenKey, jwt);\r\n}\r\n\r\nfunction loginWithJwt(jwt) {\r\n  localStorage.setItem(TokenKey, jwt);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(TokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction logoutUser() {\r\n  localStorage.removeItem(TokenKey);\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(\"Web Token\");\r\n}\r\n\r\nexport default {\r\n  loginUser,\r\n  loginWithJwt,\r\n  getCurrentUser,\r\n  logoutUser,\r\n  getJwt,\r\n};\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h3 className=\"container\">CUSTOMERS</h3>;\r\n};\r\n\r\nexport default Customers;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/movies\";\r\n\r\nfunction movieUrl(id) {\r\n  return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n\r\n  return http.post(apiEndpoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(movieUrl(movieId));\r\n}\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = ({ totalItems, pageSize, currentPage, onPageChange }) => {\r\n  const totalPages = Math.ceil(totalItems / pageSize);\r\n  if (totalPages <= 1) return null;\r\n  const paged = _.range(1, totalPages + 1);\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {paged.map((paged) => (\r\n          <li\r\n            onClick={() => onPageChange(paged)}\r\n            key={paged}\r\n            className={paged === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a href=\"#P\" className=\"page-link\">\r\n              {paged}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(totalItems, currentPage, pageSize) {\r\n  const startIndex = (currentPage - 1) * pageSize;\r\n  return _(totalItems).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  totalGenres,\r\n  selectedGenre,\r\n  valueProperty,\r\n  textProperty,\r\n  onGenreSelect,\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {totalGenres.map((genre) => (\r\n        <li\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => onGenreSelect(genre)}\r\n          key={genre[valueProperty]}\r\n          className={\r\n            genre === selectedGenre\r\n              ? \"list-group-item active\"\r\n              : \"list-group-item\"\r\n          }\r\n        >\r\n          {genre[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  valueProperty: \"_id\",\r\n  textProperty: \"name\",\r\n};\r\n\r\nexport default ListGroup;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = `/genres`;\r\n\r\nexport function getGenres() {\r\n  return http.get(apiEndpoint);\r\n}\r\n","import React from \"react\";\n\nconst Like = ({ liked, onClick }) => {\n  let classes = \"fa fa-heart\";\n  if (!liked) classes += \"-o\";\n  return (\n    <i\n      onClick={onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\n// column: Array\r\n// columnSorting: Object\r\n// onSort: Function\r\n\r\nclass TableHeader extends Component {\r\n  raiseSorting = (path) => {\r\n    const columnSorting = { ...this.props.columnSorting };\r\n    if (columnSorting.path === path) {\r\n      columnSorting.order = columnSorting.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      columnSorting.path = path;\r\n      columnSorting.order = \"asc\";\r\n    }\r\n    this.props.onSort(columnSorting);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { columnSorting } = this.props;\r\n\r\n    if (column.path !== columnSorting.path) return null;\r\n    if (columnSorting.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n\r\n  render() {\r\n    const { column } = this.props;\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {column.map((column) => (\r\n            <th\r\n              style={{ cursor: \"pointer\" }}\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSorting(column.path)}\r\n            >\r\n              {column.label}\r\n              {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  uniqueKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.uniqueKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\n// column: object\r\n// onSort: Function\r\n// columnSorting: Array\r\n// data: Array\r\n\r\nconst Table = ({ column, onSort, columnSorting, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader\r\n        className=\"table\"\r\n        column={column}\r\n        onSort={onSort}\r\n        columnSorting={columnSorting}\r\n      />\r\n      <TableBody data={data} columns={column} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport auth from \"./../services/authService\";\r\n\r\nclass MoviesTable extends Component {\r\n  column = [\r\n    {\r\n      label: \"Title\",\r\n      path: \"title\",\r\n      content: (movies) => (\r\n        <Link to={`/movies/${movies._id}`}>{movies.title}</Link>\r\n      ),\r\n    },\r\n    { label: \"Genre\", path: \"genre.name\" },\r\n    { label: \"Stock\", path: \"numberInStock\" },\r\n    { label: \"Rate\", path: \"dailyRentalRate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) {\r\n      this.column.push(this.showDeleteBtn);\r\n    }\r\n  }\r\n\r\n  showDeleteBtn = {\r\n    key: \"delete\",\r\n    content: (movie) => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  render() {\r\n    const { movies, onSort, columnSorting } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        column={this.column}\r\n        onSort={onSort}\r\n        columnSorting={columnSorting}\r\n        data={movies}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"searchQuery\"\r\n      className=\"form-control mb-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport { getGenres } from \"../services/genreService\";\nimport MoviesTable from \"./moviesTable\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport SearchBox from \"./common/search\";\nimport { toast } from \"react-toastify\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genre: [],\n    pageSize: 4,\n    currentPage: 1,\n    columnSorting: { path: \"title\", order: \"asc\" },\n    searchQuery: \"\",\n  };\n\n  getPagedData = () => {\n    const {\n      movies: allMovies,\n      pageSize,\n      selectedGenre,\n      currentPage,\n      columnSorting,\n      searchQuery,\n    } = this.state;\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter((m) =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\n\n    const sorting = _.orderBy(\n      filtered,\n      [columnSorting.path],\n      [columnSorting.order]\n    );\n\n    const movies = paginate(sorting, currentPage, pageSize);\n\n    return { movies, totalCount: filtered.length };\n  };\n\n  async componentDidMount() {\n    const { data: genreData } = await getGenres();\n\n    const genre = [{ name: \"All Genres\", _id: \"\" }, ...genreData];\n\n    const { data: movieData } = await getMovies();\n\n    this.setState({ movies: movieData, genre });\n  }\n\n  handleDelete = async (movie) => {\n    const originalMovies = this.state.movies;\n\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n\n    try {\n      await deleteMovie(movie._id); // Optimistic Updates\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        toast(\"This movie has already been deleted!\");\n      }\n      this.setState({ movies: originalMovies });\n    }\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (paged) => {\n    this.setState({ currentPage: paged });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = (searchQuery) => {\n    this.setState({ searchQuery, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSorting = (columnSorting) => {\n    this.setState({ columnSorting });\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { user } = this.props;\n\n    const { movies, totalCount } = this.getPagedData();\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <ListGroup\n              totalGenres={this.state.genre}\n              selectedGenre={this.state.selectedGenre}\n              onGenreSelect={this.handleGenreSelect}\n            />\n          </div>\n          <div className=\"col-9\">\n            {user && (\n              <Link to=\"/movies/new\" className=\"btn btn-primary mb-4\">\n                New Movie\n              </Link>\n            )}\n            <p>Showing {totalCount} movies in the database.</p>\n\n            <SearchBox\n              value={this.state.searchQuery}\n              onChange={this.handleSearch}\n            />\n\n            <MoviesTable\n              onSort={this.handleSorting}\n              movies={movies}\n              onLike={this.handleLike}\n              onDelete={this.handleDelete}\n              columnSorting={this.state.columnSorting}\n            />\n\n            <Pagination\n              totalItems={totalCount}\n              pageSize={this.state.pageSize}\n              currentPage={this.state.currentPage}\n              onPageChange={this.handlePageChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h3 className=\"container\">RENTALS</h3>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar mb-5 navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Vidly\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNavAltMarkup\"\r\n          aria-controls=\"navbarNavAltMarkup\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n          <div className=\"navbar-nav\">\r\n            <NavLink className=\"nav-link\" aria-current=\"page\" to=\"/movies\">\r\n              Movies\r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/customers\">\r\n              Customers\r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/rentals\">\r\n              Rentals\r\n            </NavLink>\r\n            {!user && (\r\n              <React.Fragment>\r\n                <NavLink className=\"nav-link\" to=\"/login\">\r\n                  Login\r\n                </NavLink>\r\n                <NavLink className=\"nav-link\" to=\"/register\">\r\n                  Register\r\n                </NavLink>\r\n              </React.Fragment>\r\n            )}\r\n            {user && (\r\n              <React.Fragment>\r\n                <NavLink className=\"nav-link\" to=\"/profile\">\r\n                  {user.name}\r\n                </NavLink>\r\n                <NavLink className=\"nav-link\" to=\"/logout\">\r\n                  logout\r\n                </NavLink>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h3 className=\"container\">NOT FOUND</h3>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, errors, ...rest }) => {\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <label htmlFor={name} className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <input name={name} id={name} {...rest} className=\"form-control\" />\r\n      {errors && <div className=\"alert alert-danger\">{errors}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { options } from \"joi-browser\";\r\nimport React from \"react\";\r\n\r\n// name, Label, errors\r\n\r\nconst Select = ({ name, label, options, errors, ...rest }) => {\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <label htmlFor={name} className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <select\r\n        name={name}\r\n        id={name}\r\n        {...rest}\r\n        className=\"form-control form-select\"\r\n      >\r\n        <option value=\"\">Select One Value</option>\r\n        {options.map((opt) => (\r\n          <option key={opt._id} value={opt._id}>\r\n            {opt.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {errors && <div className=\"alert alert-danger\">{errors}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    console.log(errors);\r\n    if (errors) return;\r\n\r\n    {\r\n      this.doSubmit();\r\n    }\r\n  };\r\n\r\n  validateChange = ({ name, value }) => {\r\n    const props = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = joi.validate(props, schema);\r\n\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorsMessage = this.validateChange(input);\r\n    if (errorsMessage) errors[input.name] = errorsMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderInput = (label, name, type = \"text\") => {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        label={label}\r\n        name={name}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        errors={errors[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderSelect = (label, name, options) => {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        label={label}\r\n        name={name}\r\n        options={options}\r\n        errors={errors[name]}\r\n        onChange={this.handleChange}\r\n        value={data[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderButton = (label) => {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/users\";\r\n\r\nexport function registerUser(user) {\r\n  return http.post(apiEndpoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name,\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport joi from \"joi-browser\";\r\nimport { registerUser } from \"./../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: joi.string().required().label(\"Username\").email(),\r\n    password: joi.string().required().label(\"Password\").min(3).max(10),\r\n    name: joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      // Call The Server\r\n      const response = await registerUser(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h3>Register Form</h3>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"Username\", \"username\")}\r\n          {this.renderInput(\"Password\", \"password\", \"password\")}\r\n          {this.renderInput(\"Name\", \"name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport joi from \"joi-browser\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\n\r\n//  ID# {match.params.id}\r\n\r\nclass MoviesForm extends Form {\r\n  state = {\r\n    data: { title: \"\", genreId: \"\", numberInStock: \"\", dailyRentalRate: \"\" },\r\n    genre: [],\r\n    errors: {},\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genre } = await getGenres();\r\n    this.setState({ genre });\r\n  }\r\n\r\n  async populateMovies() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovies();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  }\r\n\r\n  schema = {\r\n    _id: joi.string(),\r\n    title: joi.string().required().label(\"Title\"),\r\n    genreId: joi.string().required().label(\"Genre\"),\r\n    numberInStock: joi\r\n      .number()\r\n      .integer()\r\n      .min(1)\r\n      .max(100)\r\n      .required()\r\n      .label(\"Number In Stock\"),\r\n    dailyRentalRate: joi.number().min(0).max(10).required().label(\"Rate\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n\r\n    this.props.history.push(\"/movies\");\r\n    // CALL THE SERVER\r\n    console.log(\"Submitted\");\r\n  };\r\n\r\n  render() {\r\n    // const { match, history } = this.props;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h3>Movie Form</h3>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"Title\", \"title\")}\r\n          {this.renderSelect(\"Genre\", \"genreId\", this.state.genre)}\r\n          {this.renderInput(\"Number In Stock\", \"numberInStock\", \"number\")}\r\n          {this.renderInput(\"Rate\", \"dailyRentalRate\")}\r\n          {this.renderButton(\"Save Movie\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesForm;\r\n\r\n// import React from \"react\";\r\n// import Joi from \"joi-browser\";\r\n// import Form from \"./common/form\";\r\n// import { getMovie, saveMovie } from \"../services/movieService\";\r\n// import { getGenres } from \"../services/genreService\";\r\n\r\n// class MoviesForm extends Form {\r\n//   state = {\r\n//     data: {\r\n//       title: \"\",\r\n//       genreId: \"\",\r\n//       numberInStock: \"\",\r\n//       dailyRentalRate: \"\",\r\n//     },\r\n//     genres: [],\r\n//     errors: {},\r\n//   };\r\n\r\n//   schema = {\r\n//     _id: Joi.string(),\r\n//     title: Joi.string().required().label(\"Title\"),\r\n//     genreId: Joi.string().required().label(\"Genre\"),\r\n//     numberInStock: Joi.number()\r\n//       .required()\r\n//       .min(0)\r\n//       .max(100)\r\n//       .label(\"Number in Stock\"),\r\n//     dailyRentalRate: Joi.number()\r\n//       .required()\r\n//       .min(0)\r\n//       .max(10)\r\n//       .label(\"Daily Rental Rate\"),\r\n//   };\r\n\r\n//   async populateGenres() {\r\n//     const { data: genres } = await getGenres();\r\n//     this.setState({ genres });\r\n//   }\r\n\r\n//   async populateMovie() {\r\n//     try {\r\n//       const movieId = this.props.match.params.id;\r\n//       if (movieId === \"new\") return;\r\n\r\n//       const { data: movie } = await getMovie(movieId);\r\n//       this.setState({ data: this.mapToViewModel(movie) });\r\n//     } catch (ex) {\r\n//       if (ex.response && ex.response.status === 404)\r\n//         this.props.history.replace(\"/not-found\");\r\n//     }\r\n//   }\r\n\r\n//   async componentDidMount() {\r\n//     await this.populateGenres();\r\n//     await this.populateMovie();\r\n//   }\r\n\r\n//   mapToViewModel(movie) {\r\n//     return {\r\n//       _id: movie._id,\r\n//       title: movie.title,\r\n//       genreId: movie.genre._id,\r\n//       numberInStock: movie.numberInStock,\r\n//       dailyRentalRate: movie.dailyRentalRate,\r\n//     };\r\n//   }\r\n\r\n//   doSubmit = async () => {\r\n//     await saveMovie(this.state.data);\r\n\r\n//     this.props.history.push(\"/movies\");\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <h1>Movie Form</h1>\r\n//         <form onSubmit={this.handleSubmit}>\r\n//           {this.renderInput(\"title\", \"Title\")}\r\n//           {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n//           {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n//           {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n//           {this.renderButton(\"Save\")}\r\n//         </form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default MoviesForm;\r\n","import React from \"react\";\r\nimport joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"./../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: joi.string().required().label(\"Username\"),\r\n    password: joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      // Call The Server\r\n      const { data } = this.state;\r\n      await auth.loginUser(data.username, data.password);\r\n\r\n      const { state } = this.props.location;\r\n\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  createRef = React.createRef();\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h3 className=\"mb-4\">Login Form </h3>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"Username\", \"username\")}\r\n          {this.renderInput(\"Password\", \"password\", \"password\")}\r\n          {this.renderButton(\"login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logoutUser();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        console.log(props);\r\n\r\n        if (!auth.getCurrentUser()) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        } else {\r\n          return Component ? <Component {...props} /> : render(props);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport auth from \"./services/authService\";\nimport Customers from \"./components/customers\";\nimport Movies from \"./components/movies\";\nimport Rentals from \"./components/rentals\";\nimport NavBar from \"./components/navBar\";\nimport NotFound from \"./components/notFound\";\nimport RegisterForm from \"./components/registerForm\";\nimport { ToastContainer } from \"react-toastify\";\nimport MoviesForm from \"./components/moviesForm\";\nimport LoginForm from \"./components/loginForm\";\nimport Logout from \"./components/logout\";\nimport ProtectedRoute from \"./components/common/proctedRoutes\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <Switch>\n          <ProtectedRoute path=\"/movies/:id\" component={MoviesForm} />\n          <Route\n            path=\"/movies\"\n            render={(props) => <Movies {...props} user={user} />}\n          />\n          <Route path=\"/login\" component={LoginForm} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/customers\" component={Customers} />\n          <Route path=\"/rentals\" component={Rentals} />\n          <Route path=\"/register\" component={RegisterForm} />\n          <Route path=\"/not-found\" component={NotFound} />\n          <Redirect from=\"/\" exact to=\"/movies\" />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconsole.log(\"ScoopaDive Graphics\", process.env.REACT_APP_API_URL);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}